{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"158sISn7GwVGZ82N8epzdTxRmx6WT4uEu","authorship_tag":"ABX9TyP1wwK9/EKaRLHpzAWSI4yq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"69d570f2bb0943a7b81b5de70379f01c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0c22607f214e4fddbd03d1a522afcc2d","IPY_MODEL_9e03f54cd04346778ebe8f55bfdc2a39","IPY_MODEL_2f704f7ff047418aa18750a2b243493d"],"layout":"IPY_MODEL_90de95d4ea0e4b068f8ce19ba3bf860b"}},"0c22607f214e4fddbd03d1a522afcc2d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0ed85c99ba26418ebd54da991e9feaca","placeholder":"​","style":"IPY_MODEL_ef1b7e3720d44bd49d3b69a2146f41ce","value":""}},"9e03f54cd04346778ebe8f55bfdc2a39":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_45dab30ebdfc44fa8ec91b681ddba0bf","max":100,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9ae3fd9118ba44db860f956d8d5177c3","value":100}},"2f704f7ff047418aa18750a2b243493d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_40599ff3c20f4ffc83ed4afd757008a4","placeholder":"​","style":"IPY_MODEL_66e285f8c4b34cc39e303521ce773106","value":" 300/? [00:56&lt;00:00,  6.70it/s]"}},"90de95d4ea0e4b068f8ce19ba3bf860b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0ed85c99ba26418ebd54da991e9feaca":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ef1b7e3720d44bd49d3b69a2146f41ce":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"45dab30ebdfc44fa8ec91b681ddba0bf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9ae3fd9118ba44db860f956d8d5177c3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"40599ff3c20f4ffc83ed4afd757008a4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"66e285f8c4b34cc39e303521ce773106":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["69d570f2bb0943a7b81b5de70379f01c","0c22607f214e4fddbd03d1a522afcc2d","9e03f54cd04346778ebe8f55bfdc2a39","2f704f7ff047418aa18750a2b243493d","90de95d4ea0e4b068f8ce19ba3bf860b","0ed85c99ba26418ebd54da991e9feaca","ef1b7e3720d44bd49d3b69a2146f41ce","45dab30ebdfc44fa8ec91b681ddba0bf","9ae3fd9118ba44db860f956d8d5177c3","40599ff3c20f4ffc83ed4afd757008a4","66e285f8c4b34cc39e303521ce773106"]},"id":"bnyXwd6xHArg","executionInfo":{"status":"ok","timestamp":1751933948005,"user_tz":360,"elapsed":56414,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}},"outputId":"5a536c3c-2a76-42fa-80e7-c932222e6a0f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/100 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"69d570f2bb0943a7b81b5de70379f01c"}},"metadata":{}}],"source":["# Instalar librerías necesarias (Solo ejecutar si no están instaladas)\n","from IPython.utils import io\n","import tqdm.notebook\n","\n","total = 100\n","with tqdm.notebook.tqdm(total=total) as pbar:\n","    with io.capture_output() as captured:\n","        # Instalar rdkit\n","        !pip -q install rdkit.pypi==2021.9.4\n","        pbar.update(20)\n","        # Instalar Pillow\n","        !pip -q install Pillow\n","        pbar.update(40)\n","        # Instalar molplotly\n","        !pip install molplotly\n","        pbar.update(60)\n","        # Instalar jupyter-dash\n","        !pip install jupyter-dash\n","        pbar.update(80)\n","        # Instalar el diseño de aplicación dash\n","        !pip install dash-bootstrap-components\n","        pbar.update(100)\n"]},{"cell_type":"code","source":[],"metadata":{"id":"L95F4_UkHWxU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Importar librerías\n","import pandas as pd\n","from rdkit import Chem\n","from rdkit.Chem import Descriptors\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.cluster import KMeans\n","from sklearn.decomposition import PCA\n","import matplotlib.pyplot as plt\n","import numpy as np\n","from sklearn.metrics import silhouette_score\n","from sklearn.cluster import KMeans\n","from sklearn.metrics import silhouette_score\n","from sklearn import tree\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn import metrics\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","import numpy as np\n","from sklearn.model_selection import cross_validate, KFold\n","from sklearn.metrics import make_scorer, confusion_matrix, matthews_corrcoef\n","import matplotlib.pyplot as plt\n","from scipy import stats"],"metadata":{"id":"IjUBTCEJHWu_","executionInfo":{"status":"ok","timestamp":1751934094025,"user_tz":360,"elapsed":41,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Leer bases de datos\n","datos = \"/content/drive/MyDrive/INGER/ETAPA 2024/Version Final/0. Data Set/Concatenadas.csv\"\n","datos = pd.read_csv(datos)\n"],"metadata":{"id":"PBLv2EEaHWsl","executionInfo":{"status":"ok","timestamp":1751933960348,"user_tz":360,"elapsed":36,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# Agregar una columna de índices\n","datos['Index'] = datos.index"],"metadata":{"id":"cK8sA-RaHWqH","executionInfo":{"status":"ok","timestamp":1751933961709,"user_tz":360,"elapsed":15,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# Información del dataset\n","datos.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P_tio9weHWnk","executionInfo":{"status":"ok","timestamp":1751933962444,"user_tz":360,"elapsed":41,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}},"outputId":"7caf51b5-ed65-4359-993f-58b05158438e"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 405 entries, 0 to 404\n","Data columns (total 48 columns):\n"," #   Column                     Non-Null Count  Dtype  \n","---  ------                     --------------  -----  \n"," 0   Name                       405 non-null    object \n"," 1   Total Molweight            405 non-null    float64\n"," 2   Monoisotopic Mass          405 non-null    float64\n"," 3   cLogP                      405 non-null    float64\n"," 4   cLogS                      405 non-null    float64\n"," 5   H-Acceptors                405 non-null    int64  \n"," 6   H-Donors                   405 non-null    int64  \n"," 7   Total Surface Area         405 non-null    float64\n"," 8   Relative PSA               405 non-null    float64\n"," 9   Polar Surface Area         405 non-null    float64\n"," 10  Druglikeness               405 non-null    float64\n"," 11  Shape Index                405 non-null    float64\n"," 12  Molecular Flexibility      405 non-null    float64\n"," 13  Molecular Complexity       405 non-null    float64\n"," 14  Fragments                  405 non-null    int64  \n"," 15  Non-H Atoms                405 non-null    int64  \n"," 16  Non-C/H Atoms              405 non-null    int64  \n"," 17  Metal-Atoms                405 non-null    int64  \n"," 18  Electronegative Atoms      405 non-null    int64  \n"," 19  Stereo Centers             405 non-null    int64  \n"," 20  Rotatable Bonds            405 non-null    int64  \n"," 21  Rings Closures             405 non-null    int64  \n"," 22  Aromatic Atoms             405 non-null    int64  \n"," 23  sp3-Atoms                  405 non-null    int64  \n"," 24  Symmetric atoms            405 non-null    int64  \n"," 25  Small Rings                405 non-null    int64  \n"," 26  Carbo-Rings                405 non-null    int64  \n"," 27  Hetero-Rings               405 non-null    int64  \n"," 28  Saturated Rings            405 non-null    int64  \n"," 29  Non-Aromatic Rings         405 non-null    int64  \n"," 30  Aromatic Rings             405 non-null    int64  \n"," 31  Saturated Carbo-Rings      405 non-null    int64  \n"," 32  Non-Aromatic Carbo-Rings   405 non-null    int64  \n"," 33  Carbo-Aromatic Rings       405 non-null    int64  \n"," 34  Saturated Hetero-Rings     405 non-null    int64  \n"," 35  Non-Aromatic Hetero-Rings  405 non-null    int64  \n"," 36  Hetero-Aromatic Rings      405 non-null    int64  \n"," 37  Amides                     405 non-null    int64  \n"," 38  Amines                     405 non-null    int64  \n"," 39  Alkyl-Amines               405 non-null    int64  \n"," 40  Aromatic Amines            405 non-null    int64  \n"," 41  Aromatic Nitrogens         405 non-null    int64  \n"," 42  Basic Nitrogens            405 non-null    int64  \n"," 43  Acidic Oxygens             405 non-null    int64  \n"," 44  Geroprotectors             405 non-null    int64  \n"," 45  DataSet                    405 non-null    object \n"," 46  Smile                      405 non-null    object \n"," 47  Index                      405 non-null    int64  \n","dtypes: float64(11), int64(34), object(3)\n","memory usage: 152.0+ KB\n"]}]},{"cell_type":"code","source":["# Separar las las columnas de las variables predictorias (X) de la columna que contiene la variable a predecir (Y)\n","# PODEMOS UTILIZAR UNICAMENTE COLUMNAS (DESCRIPTORES) DE INTERES PARA ENTRENAR EL MODELO Y NO CAER EN SOBREAJUSTE.\n","columnas_interes = [1, 3, 5, 6, 7, 8, 20]\n","X = datos.iloc[:, columnas_interes]\n","y = datos.iloc[:, 44]\n"],"metadata":{"id":"P-DpT6AGHWhx","executionInfo":{"status":"ok","timestamp":1751934098336,"user_tz":360,"elapsed":5,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["\n","# Separar datos en conjuntos de entrenamiento y prueba\n","#indicamos que se partan los datos en un 80% para la entrenamiento y 20% para prueba,\n","#el valor de random_state=42 nos indica que el algoritmo utilizará los mismos datos de entrenamiento y prueba lo que nos dara reproducibilidad\n","X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, random_state=42)\n"],"metadata":{"id":"jBIs6CNpHWec","executionInfo":{"status":"ok","timestamp":1751934099327,"user_tz":360,"elapsed":5,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["\n","# 1. Selecciona las columnas que quieras “exportar”\n","columnas_a_mostrar = ['Name', 'Geroprotectors']          # ← cambia 'Compound_ID' por tu columna identificadora\n","columnas_a_mostrar += ['Index']               # u otras columnas que te interese ver\n","# Agregaremos la etiqueta al final\n","\n","# 2. Crea un DataFrame para cada subconjunto\n","train_df = datos.loc[X_train.index, columnas_a_mostrar].copy()\n","train_df['0/1'] = y_train.values        # añade la etiqueta (0/1, activo/inactivo, etc.)\n","\n","test_df  = datos.loc[X_test.index,  columnas_a_mostrar].copy()\n","test_df['Etiqueta']  = y_test.values\n","\n","# 3. (Opcional) guarda los archivos para consultarlos o compartirlos\n","train_df.to_csv('compuestos_train.csv', index=False)\n","test_df.to_csv('compuestos_test.csv',  index=False)\n","\n","# 4. Si solo quieres verlos en pantalla:\n","print('----- TRAIN -----')\n","print(train_df.head())\n","print(f'\\nTotal compuestos en train: {len(train_df)}')\n","\n","print('\\n----- TEST -----')\n","print(test_df.head())\n","print(f'\\nTotal compuestos en test: {len(test_df)}')\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MPXcrJm6IIj2","executionInfo":{"status":"ok","timestamp":1751934110768,"user_tz":360,"elapsed":29,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}},"outputId":"4717b641-7ec8-409d-e497-8e825b0b8d23"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["----- TRAIN -----\n","                 Name  Geroprotectors  Index  0/1\n","355        Dronabinol               0    355    0\n","234  MEPAZINE ACETATE               0    234    0\n","3               1400W               1      3    1\n","18             Amn082               1     18    1\n","131         Mianserin               1    131    1\n","\n","Total compuestos en train: 324\n","\n","----- TEST -----\n","           Name  Geroprotectors  Index  Etiqueta\n","70   Didanosine               1     70         1\n","218   ROFECOXIB               0    218         0\n","385  avermectin               0    385         0\n","33       Butein               1     33         1\n","42     Catechin               1     42         1\n","\n","Total compuestos en test: 81\n"]}]},{"cell_type":"code","source":["# Unificar los subconjuntos y guardarlos\n","\n","# 1. Añade una columna que indique a qué subconjunto pertenece cada registro\n","train_df  = train_df.copy()\n","train_df['Subset'] = 'train'\n","test_df   = test_df.copy()\n","test_df['Subset']  = 'test'\n","\n","# 2. Combina ambos DataFrames\n","full_df = pd.concat([train_df, test_df], ignore_index=True)\n","\n","\n","# 3. Guarda el resultado\n","#full_df.to_csv('data_test-train.csv', index=False)\n","#print(\"Archivo CSV generado: data_test-train.csv\")\n"],"metadata":{"id":"10aEC-3UIIcA","executionInfo":{"status":"ok","timestamp":1751934116136,"user_tz":360,"elapsed":2,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# Creación del modelo de Árbol de Decisión Binario\n","arbol = DecisionTreeClassifier(criterion='entropy', max_depth=None, random_state=42)"],"metadata":{"id":"V2-FRYJiIIZW","executionInfo":{"status":"ok","timestamp":1751934119793,"user_tz":360,"elapsed":5,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# ===== AGREGAR VALIDACIÓN CRUZADA AQUÍ =====\n","from sklearn.model_selection import cross_val_score, StratifiedKFold\n","\n","# Configurar la validación cruzada (5 folds estratificados)\n","cv = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n"],"metadata":{"id":"XdK0GlHlImj9","executionInfo":{"status":"ok","timestamp":1751934121222,"user_tz":360,"elapsed":17,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Definir métricas personalizadas\n","def specificity_score(y_true, y_pred):\n","    tn, fp, fn, tp = confusion_matrix(y_true, y_pred).ravel()\n","    return tn / (tn + fp)\n","\n","# Configurar KFold con 5 folds\n","cv = KFold(n_splits=5, shuffle=True, random_state=42)\n","\n","# Definir todas las métricas a evaluar\n","scoring = {\n","    'accuracy': 'accuracy',\n","    'precision': 'precision',\n","    'recall': 'recall',\n","    'f1': 'f1',\n","    'specificity': make_scorer(specificity_score),\n","    'mcc': make_scorer(matthews_corrcoef)\n","}\n","\n","# Realizar validación cruzada\n","cv_results = cross_validate(arbol, X, y, cv=cv, scoring=scoring)\n","\n","# Función para calcular media y desviación estándar\n","def get_mean_std(scores):\n","    return np.mean(scores), np.std(scores)\n","\n","# Obtener resultados para cada métrica\n","metrics = {\n","    'Accuracy': cv_results['test_accuracy'],\n","    'Precision': cv_results['test_precision'],\n","    'Recall': cv_results['test_recall'],\n","    'F1': cv_results['test_f1'],\n","    'Specificity': cv_results['test_specificity'],\n","    'Mcc': cv_results['test_mcc']\n","}\n","\n","# Imprimir resultados en el formato solicitado\n","print(\"\\n=== RESULTADOS DE VALIDACIÓN CRUZADA (5-fold) ===\")\n","for name, scores in metrics.items():\n","    mean, std = get_mean_std(scores)\n","    print(f\"{name}: {mean:.4f} (±{std:.4f})\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZhQ3Jv91a8cq","executionInfo":{"status":"ok","timestamp":1751934391522,"user_tz":360,"elapsed":252,"user":{"displayName":"Jose Alberto Santiago De la Cruz","userId":"08503411874153474204"}},"outputId":"a1911ba5-0f53-4cae-8301-490b75377d8d"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","=== RESULTADOS DE VALIDACIÓN CRUZADA (5-fold) ===\n","Accuracy: 0.5654 (±0.0646)\n","Precision: 0.5659 (±0.0824)\n","Recall: 0.5433 (±0.1461)\n","F1: 0.5494 (±0.1166)\n","Specificity: 0.5896 (±0.0442)\n","Mcc: 0.1315 (±0.1307)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"yCuAFlNXabv6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"AjPc0HMbJAh-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"K5e2k4AOJAZX"},"execution_count":null,"outputs":[]}]}